#set($xmlString = $XMLcontent)

<script>
    $(document).ready(function(){

        if( typeof window.DOMParser === "undefined" ){
            window.DOMParser = function(){};

            window.DOMParser.prototype.parseFromString = function(str, contentType){
                if(typeof ActiveXObject !== 'undefined'){
                    var xmldata = new ActiveXObject('MSXML.DomDocument');
                    xmldata.async = false;
                    xmldata.loadXML(str);
                    return xmldata;
                } else
                if(typeof XMLHttpRequest !== 'undefined'){
                    var xmldata = new XMLHttpRequest;

                    if(!contentType){
                        contentType = 'application/xml';
                    }

                    xmldata.open('GET', 'data:' + contentType + ';charset=utf-8,' + encodeURIComponent(str), false);

                    if(xmldata.overrideMimeType) {
                        xmldata.overrideMimeType(contentType);
                    }

                    xmldata.send(null);
                    return xmldata.responseXML;
                }
            };
        }
    });

    var orgUnitUidMap = new Object();

        #foreach( $key in $keyCodeList )
        orgUnitUidMap["$key"] = '$uidMap.get("$key")';
        #end

    var parser = new DOMParser();
    var xmlObject = parser.parseFromString('${xmlString}', "text/xml");

    var orgunit_col = $(xmlObject).find("meta").find("orgunit").attr('col');

    /*-------------------------------------------------------------------------------------------------*/
    var dataValueset = { };

    var datavalueMap = new Object();

    $( xmlObject ).find("de-codes").find("dataelements").find("de-code").each(function(){
        var  dataElementUId = $(this).text(),
                colno =  $(this).attr('col');
        datavalueMap[dataElementUId] = colno ;
    });
    /*-------------------------------------------------------------------------------------------------*/

    for(var row = 2; row < endRowNo; row++)
    {
        var orgUnitCode = AggregateExcelCellMap[row+'_'+orgunit_col];
        var dataValues = [];
     //   console.log(orgUnitCode);

        if(orgUnitCode != undefined){

           var orgUnitUid =  orgUnitUidMap[orgUnitCode.toString().trim()];
            for(var dataelement in datavalueMap){

                var deId_optionId = dataelement.split('.');

                var item = {};
                item ["dataElement"] = deId_optionId[0];
                item ["categoryOptionCombo"] = deId_optionId[1];
                item ["period"] = period;
                item ["orgUnit"] = orgUnitUid ;

                if( AggregateExcelCellMap[row+'_'+datavalueMap[dataelement]] != undefined )
                {
                    item ["value"] = AggregateExcelCellMap[row+'_'+datavalueMap[dataelement]];
                }
                else
                {
                    item ["value"] = "";
                }

                dataValues.push(item);
            }
            dataValueset.dataValues = dataValues;
            console.log(JSON.stringify(dataValueset));

            importAggregateExcelData(dataValueset,row);
        }
    }

</script>
